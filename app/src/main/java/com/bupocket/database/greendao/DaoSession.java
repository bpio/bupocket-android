package com.bupocket.database.greendao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.bupocket.model.NodeBuildModel;
import com.bupocket.model.SuperNodeModel;

import com.bupocket.database.greendao.NodeBuildModelDao;
import com.bupocket.database.greendao.SuperNodeModelDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig nodeBuildModelDaoConfig;
    private final DaoConfig superNodeModelDaoConfig;

    private final NodeBuildModelDao nodeBuildModelDao;
    private final SuperNodeModelDao superNodeModelDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        nodeBuildModelDaoConfig = daoConfigMap.get(NodeBuildModelDao.class).clone();
        nodeBuildModelDaoConfig.initIdentityScope(type);

        superNodeModelDaoConfig = daoConfigMap.get(SuperNodeModelDao.class).clone();
        superNodeModelDaoConfig.initIdentityScope(type);

        nodeBuildModelDao = new NodeBuildModelDao(nodeBuildModelDaoConfig, this);
        superNodeModelDao = new SuperNodeModelDao(superNodeModelDaoConfig, this);

        registerDao(NodeBuildModel.class, nodeBuildModelDao);
        registerDao(SuperNodeModel.class, superNodeModelDao);
    }
    
    public void clear() {
        nodeBuildModelDaoConfig.clearIdentityScope();
        superNodeModelDaoConfig.clearIdentityScope();
    }

    public NodeBuildModelDao getNodeBuildModelDao() {
        return nodeBuildModelDao;
    }

    public SuperNodeModelDao getSuperNodeModelDao() {
        return superNodeModelDao;
    }

}
