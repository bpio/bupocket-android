package com.bupocket.database.greendao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.bupocket.model.ImageInfo;
import com.bupocket.model.NodeBuildModel;
import com.bupocket.model.SuperNodeModel;
import com.bupocket.model.TokenTxInfo;
import com.bupocket.http.api.AddressBookListBean;

import com.bupocket.database.greendao.ImageInfoDao;
import com.bupocket.database.greendao.NodeBuildModelDao;
import com.bupocket.database.greendao.SuperNodeModelDao;
import com.bupocket.database.greendao.TokenTxInfoDao;
import com.bupocket.database.greendao.AddressBookListBeanDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig imageInfoDaoConfig;
    private final DaoConfig nodeBuildModelDaoConfig;
    private final DaoConfig superNodeModelDaoConfig;
    private final DaoConfig tokenTxInfoDaoConfig;
    private final DaoConfig addressBookListBeanDaoConfig;

    private final ImageInfoDao imageInfoDao;
    private final NodeBuildModelDao nodeBuildModelDao;
    private final SuperNodeModelDao superNodeModelDao;
    private final TokenTxInfoDao tokenTxInfoDao;
    private final AddressBookListBeanDao addressBookListBeanDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        imageInfoDaoConfig = daoConfigMap.get(ImageInfoDao.class).clone();
        imageInfoDaoConfig.initIdentityScope(type);

        nodeBuildModelDaoConfig = daoConfigMap.get(NodeBuildModelDao.class).clone();
        nodeBuildModelDaoConfig.initIdentityScope(type);

        superNodeModelDaoConfig = daoConfigMap.get(SuperNodeModelDao.class).clone();
        superNodeModelDaoConfig.initIdentityScope(type);

        tokenTxInfoDaoConfig = daoConfigMap.get(TokenTxInfoDao.class).clone();
        tokenTxInfoDaoConfig.initIdentityScope(type);

        addressBookListBeanDaoConfig = daoConfigMap.get(AddressBookListBeanDao.class).clone();
        addressBookListBeanDaoConfig.initIdentityScope(type);

        imageInfoDao = new ImageInfoDao(imageInfoDaoConfig, this);
        nodeBuildModelDao = new NodeBuildModelDao(nodeBuildModelDaoConfig, this);
        superNodeModelDao = new SuperNodeModelDao(superNodeModelDaoConfig, this);
        tokenTxInfoDao = new TokenTxInfoDao(tokenTxInfoDaoConfig, this);
        addressBookListBeanDao = new AddressBookListBeanDao(addressBookListBeanDaoConfig, this);

        registerDao(ImageInfo.class, imageInfoDao);
        registerDao(NodeBuildModel.class, nodeBuildModelDao);
        registerDao(SuperNodeModel.class, superNodeModelDao);
        registerDao(TokenTxInfo.class, tokenTxInfoDao);
        registerDao(AddressBookListBean.class, addressBookListBeanDao);
    }
    
    public void clear() {
        imageInfoDaoConfig.clearIdentityScope();
        nodeBuildModelDaoConfig.clearIdentityScope();
        superNodeModelDaoConfig.clearIdentityScope();
        tokenTxInfoDaoConfig.clearIdentityScope();
        addressBookListBeanDaoConfig.clearIdentityScope();
    }

    public ImageInfoDao getImageInfoDao() {
        return imageInfoDao;
    }

    public NodeBuildModelDao getNodeBuildModelDao() {
        return nodeBuildModelDao;
    }

    public SuperNodeModelDao getSuperNodeModelDao() {
        return superNodeModelDao;
    }

    public TokenTxInfoDao getTokenTxInfoDao() {
        return tokenTxInfoDao;
    }

    public AddressBookListBeanDao getAddressBookListBeanDao() {
        return addressBookListBeanDao;
    }

}
